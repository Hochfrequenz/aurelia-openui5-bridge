{"version":3,"sources":["button/button.js"],"names":["bindable","customElement","noView","inject","AttributeManager","getBooleanFromAttributeValue","Ui5Button","Element","element","_button","attributeManager","attached","sap","m","Button","text","enabled","disabled","press","defaultPress","$","parents","length","au","controller","viewModel","addChild","detached","disabledChanged","newValue","setEnabled","textChanged","setText","pressChanged","attachPress"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,c,sBAAAA,Q;AAAUC,mB,sBAAAA,a;AAAeC,Y,sBAAAA,M;;AACzBC,Y,+BAAAA,M;;AACAC,sB,2BAAAA,gB;;AACAC,kC,qBAAAA,4B;;;2BAIIC,S,WAFZL,cAAc,YAAd,C,UACAE,OAAOI,OAAP,C,UAEEP,U,UACAA,U,UACAA,U,UACAA,U,UACAA,U;AAED,2BAAYQ,OAAZ,EAAqB;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eADrBC,OACqB,GADX,IACW;;AACnB,eAAKC,gBAAL,GAAwB,IAAIN,gBAAJ,CAAqBI,OAArB,CAAxB;AACA,eAAKA,OAAL,GAAeA,OAAf;AACD;;4BAEDG,Q,uBAAW;AACT,eAAKF,OAAL,GAAe,IAAIG,IAAIC,CAAJ,CAAMC,MAAV,CAAiB;AAC9BC,kBAAM,KAAKA,IADmB;AAE9BC,qBAAS,CAACX,6BAA6B,KAAKY,QAAlC,CAFoB;AAG9BC,mBAAO,KAAKA,KAAL,IAAc,IAAd,GAAqB,KAAKA,KAA1B,GAAkC,KAAKC;AAHhB,WAAjB,CAAf;;AAMA,cAAIC,EAAE,KAAKZ,OAAP,EAAgBa,OAAhB,CAAwB,iBAAxB,EAA2CC,MAA3C,GAAoD,CAAxD,EAA2D;AACzDF,cAAE,KAAKZ,OAAP,EAAgBa,OAAhB,CAAwB,iBAAxB,EAA2C,CAA3C,EAA8CE,EAA9C,CAAiDC,UAAjD,CAA4DC,SAA5D,CAAsEC,QAAtE,CAA+E,KAAKjB,OAApF,EAA6F,KAAKD,OAAlG;AACD;AACF,S;;4BACDW,Y,2BAAe,CAEd,C;;4BACDQ,Q,uBAAW,CAEV,C;;4BAEDC,e,4BAAgBC,Q,EAAU;AACxB,cAAI,KAAKpB,OAAL,KAAiB,IAArB,EAA2B;AACzB,iBAAKA,OAAL,CAAaqB,UAAb,CAAwB,CAACzB,6BAA6BwB,QAA7B,CAAzB;AACD;AAEF,S;;4BAEDE,W,wBAAYF,Q,EAAU;AACpB,cAAI,KAAKpB,OAAL,KAAiB,IAArB,EAA2B;AACzB,iBAAKA,OAAL,CAAauB,OAAb,CAAqBH,QAArB;AACD;AACF,S;;4BACDI,Y,yBAAaJ,Q,EAAU;AACrB,cAAI,KAAKpB,OAAL,KAAiB,IAArB,EAA2B;AACzB,iBAAKA,OAAL,CAAayB,WAAb,CAAyBL,QAAzB;AACD;AACF,S;;;;;;iBA7CsB,K;;;;;iBACA,K;;;;;iBACH,K;;;;;iBACD,E;;;;;iBACC,I","file":"../../../button/button.js","sourcesContent":["import { bindable, customElement, noView } from 'aurelia-templating';\nimport { inject } from 'aurelia-dependency-injection';\nimport { AttributeManager } from '../common/attributeManager';\nimport { getBooleanFromAttributeValue } from '../common/attributes';\n\n@customElement('ui5-button')\n@inject(Element)\nexport class Ui5Button {\n  @bindable() disabled = false;\n  @bindable() floating = false;\n  @bindable() large = false;\n  @bindable() text = '';\n  @bindable() press = null;\n  _button = null;\n  constructor(element) {\n    this.attributeManager = new AttributeManager(element);\n    this.element = element;\n  }\n\n  attached() {\n    this._button = new sap.m.Button({\n      text: this.text,\n      enabled: !getBooleanFromAttributeValue(this.disabled),\n      press: this.press != null ? this.press : this.defaultPress\n    });\n\n    if ($(this.element).parents(\"[ui5-container]\").length > 0) {\n      $(this.element).parents(\"[ui5-container]\")[0].au.controller.viewModel.addChild(this._button, this.element);\n    }\n  }\n  defaultPress() {\n\n  }\n  detached() {\n\n  }\n\n  disabledChanged(newValue) {\n    if (this._button !== null) {\n      this._button.setEnabled(!getBooleanFromAttributeValue(newValue));\n    }\n\n  }\n\n  textChanged(newValue) {\n    if (this._button !== null) {\n      this._button.setText(newValue);\n    }\n  }\n  pressChanged(newValue) {\n    if (this._button !== null) {\n      this._button.attachPress(newValue);\n    }\n  }\n}\n"]}