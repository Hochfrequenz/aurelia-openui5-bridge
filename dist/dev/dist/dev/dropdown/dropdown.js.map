{"version":3,"sources":["dropdown/dropdown.js"],"names":["bindable","customAttribute","bindingMode","inject","AttributeManager","getBooleanFromAttributeValue","MdDropdown","Element","defaultBindingMode","oneTime","element","attributeManager","attached","handleActivateElement","contentAttributeManager","document","getElementById","activates","addClasses","$","dropdown","alignment","belowOrigin","constrain_width","constrainWidth","gutter","parseInt","hover","inDuration","outDuration","detached","removeAttributes","removeClasses","ref","id","getAttribute","elementId","setAttribute","addAttributes"],"mappings":"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","file":"../../../dropdown/dropdown.js","sourcesContent":["import { bindable, customAttribute } from 'aurelia-templating';\nimport { bindingMode } from 'aurelia-binding';\nimport { inject } from 'aurelia-dependency-injection';\nimport { AttributeManager } from '../common/attributeManager';\nimport { getBooleanFromAttributeValue } from '../common/attributes';\n\n@customAttribute('md-dropdown')\n@inject(Element)\nexport class MdDropdown {\n  static elementId = 0;\n\n  @bindable({\n    defaultBindingMode: bindingMode.oneTime\n  }) activates = '';\n  @bindable({\n    defaultBindingMode: bindingMode.oneTime\n  }) ref = null;\n  @bindable({\n    defaultBindingMode: bindingMode.oneTime\n  }) alignment = 'left';\n  @bindable({\n    defaultBindingMode: bindingMode.oneTime\n  }) belowOrigin = false;\n  @bindable({\n    defaultBindingMode: bindingMode.oneTime\n  }) constrainWidth = true;\n  @bindable({\n    defaultBindingMode: bindingMode.oneTime\n  }) gutter = 0;\n  @bindable({\n    defaultBindingMode: bindingMode.oneTime\n  }) hover = false;\n  @bindable({\n    defaultBindingMode: bindingMode.oneTime\n  }) mdTitle;\n  @bindable({\n    defaultBindingMode: bindingMode.oneTime\n  }) inDuration = 300;\n  @bindable({\n    defaultBindingMode: bindingMode.oneTime\n  }) outDuration = 225;\n\n  constructor(element) {\n    this.element = element;\n    this.attributeManager = new AttributeManager(this.element);\n  }\n\n  attached() {\n    this.handleActivateElement();\n    this.contentAttributeManager = new AttributeManager(document.getElementById(this.activates));\n\n    this.attributeManager.addClasses('dropdown-button');\n    this.contentAttributeManager.addClasses('dropdown-content');\n    // this.attributeManager.addAttributes({ 'data-activates': this.activates });\n\n    $(this.element).dropdown({\n      alignment: this.alignment,\n      belowOrigin: getBooleanFromAttributeValue(this.belowOrigin),\n      constrain_width: getBooleanFromAttributeValue(this.constrainWidth),\n      constrainWidth: getBooleanFromAttributeValue(this.constrainWidth),\n      gutter: parseInt(this.gutter, 10),\n      hover: getBooleanFromAttributeValue(this.hover),\n      inDuration: parseInt(this.inDuration, 10),\n      outDuration: parseInt(this.outDuration, 10)\n    });\n  }\n\n  detached() {\n    this.attributeManager.removeAttributes('data-activates');\n    this.attributeManager.removeClasses('dropdown-button');\n    this.contentAttributeManager.removeClasses('dropdown-content');\n  }\n\n  handleActivateElement() {\n    if (this.ref) {\n      let id = this.ref.getAttribute('id');\n      if (!id) {\n        id = `md-dropdown-${MdDropdown.elementId++}`;\n        this.ref.setAttribute('id', id);\n        this.activates = id;\n      }\n      this.id = MdDropdown.elementId++;\n    }\n    this.attributeManager.addAttributes({ 'data-activates': this.activates });\n  }\n}\n"]}