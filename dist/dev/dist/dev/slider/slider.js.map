{"version":3,"sources":["slider/slider.js"],"names":["bindable","customElement","inlineView","bindingMode","inject","getBooleanFromAttributeValue","getLogger","MdSlider","Element","defaultBindingMode","oneTime","element","log","attached","mdFillContainer","classList","add","refresh","pause","$","slider","start","next","prev","options","height","parseInt","mdHeight","indicators","mdIndicators","interval","mdInterval","transition","mdTransition","debug","mdIndicatorsChanged"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,c,sBAAAA,Q;AAAUC,mB,sBAAAA,a;AAAeC,gB,sBAAAA,U;;AACzBC,iB,mBAAAA,W;;AACAC,Y,+BAAAA,M;;AACAC,kC,qBAAAA,4B;;AACAC,e,mBAAAA,S;;;0BAYIC,Q,WAVZN,cAAc,WAAd,C,UACAG,OAAOI,OAAP,C,UACAN,0J,UASEF,SAAS,EAAES,oBAAoBN,YAAYO,OAAlC,EAAT,C,UACAV,SAAS,EAAES,oBAAoBN,YAAYO,OAAlC,EAAT,C,UACAV,U,UACAA,SAAS,EAAES,oBAAoBN,YAAYO,OAAlC,EAAT,C,UACAV,SAAS,EAAES,oBAAoBN,YAAYO,OAAlC,EAAT,C;AAED,0BAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACnB,eAAKA,OAAL,GAAeA,OAAf;AACA,eAAKC,GAAL,GAAWN,UAAU,WAAV,CAAX;AACD;;2BAEDO,Q,uBAAW;AACT,cAAIR,6BAA6B,KAAKS,eAAlC,CAAJ,EAAwD;AACtD,iBAAKH,OAAL,CAAaI,SAAb,CAAuBC,GAAvB,CAA2B,YAA3B;AACD;AACD,eAAKC,OAAL;AACD,S;;2BAEDC,K,oBAAQ;AACNC,YAAE,KAAKR,OAAP,EAAgBS,MAAhB,CAAuB,OAAvB;AACD,S;;2BAEDC,K,oBAAQ;AACNF,YAAE,KAAKR,OAAP,EAAgBS,MAAhB,CAAuB,OAAvB;AACD,S;;2BAEDE,I,mBAAO;AACLH,YAAE,KAAKR,OAAP,EAAgBS,MAAhB,CAAuB,MAAvB;AACD,S;;2BAEDG,I,mBAAO;AACLJ,YAAE,KAAKR,OAAP,EAAgBS,MAAhB,CAAuB,MAAvB;AACD,S;;2BAEDH,O,sBAAU;AACR,cAAIO,UAAU;AACZC,oBAAQC,SAAS,KAAKC,QAAd,EAAwB,EAAxB,CADI;AAEZC,wBAAYvB,6BAA6B,KAAKwB,YAAlC,CAFA;AAGZC,sBAAUJ,SAAS,KAAKK,UAAd,EAA0B,EAA1B,CAHE;AAIZC,wBAAYN,SAAS,KAAKO,YAAd,EAA4B,EAA5B;AAJA,WAAd;AAMA,eAAKrB,GAAL,CAASsB,KAAT,CAAe,4BAAf,EAA6CV,OAA7C;AACAL,YAAE,KAAKR,OAAP,EAAgBS,MAAhB,CAAuBI,OAAvB;AACD,S;;2BAEDW,mB,kCAAsB;AACpB,eAAKlB,OAAL;AACD,S;;;;;;iBA/CwE,K;;;;;iBACP,G;;;;;iBACvC,I;;;;;iBACyC,I;;;;;iBACE,G","file":"../../../slider/slider.js","sourcesContent":["import { bindable, customElement, inlineView } from 'aurelia-templating';\nimport { bindingMode } from 'aurelia-binding';\nimport { inject } from 'aurelia-dependency-injection';\nimport { getBooleanFromAttributeValue } from '../common/attributes';\nimport { getLogger } from 'aurelia-logging';\n\n@customElement('md-slider')\n@inject(Element)\n@inlineView(`\n  <template class=\"slider\">\n  <require from=\"./slider.css\"></require>\n  <ul class=\"slides\">\n    <slot></slot>\n  </ul>\n  </template>\n`)\nexport class MdSlider {\n  @bindable({ defaultBindingMode: bindingMode.oneTime }) mdFillContainer = false;\n  @bindable({ defaultBindingMode: bindingMode.oneTime }) mdHeight = 400;\n  @bindable() mdIndicators = true;\n  @bindable({ defaultBindingMode: bindingMode.oneTime }) mdInterval = 6000;\n  @bindable({ defaultBindingMode: bindingMode.oneTime }) mdTransition = 500;\n\n  constructor(element) {\n    this.element = element;\n    this.log = getLogger('md-slider');\n  }\n\n  attached() {\n    if (getBooleanFromAttributeValue(this.mdFillContainer)) {\n      this.element.classList.add('fullscreen');\n    }\n    this.refresh();\n  }\n\n  pause() {\n    $(this.element).slider('pause');\n  }\n\n  start() {\n    $(this.element).slider('start');\n  }\n\n  next() {\n    $(this.element).slider('next');\n  }\n\n  prev() {\n    $(this.element).slider('prev');\n  }\n\n  refresh() {\n    let options = {\n      height: parseInt(this.mdHeight, 10),\n      indicators: getBooleanFromAttributeValue(this.mdIndicators),\n      interval: parseInt(this.mdInterval, 10),\n      transition: parseInt(this.mdTransition, 10)\n    };\n    this.log.debug('refreshing slider, params:', options);\n    $(this.element).slider(options);\n  }\n\n  mdIndicatorsChanged() {\n    this.refresh();\n  }\n\n  // commented since that leads to strange effects\n  // mdIntervalChanged() {\n  //   this.refresh();\n  // }\n  //\n  // mdTransitionChanged() {\n  //   this.refresh();\n  // }\n}\n"]}