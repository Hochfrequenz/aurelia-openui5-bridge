{"version":3,"sources":["dynamic-page-header/dynamic-page-header.js"],"names":["bindable","customElement","noView","inject","AttributeManager","getBooleanFromAttributeValue","Ui5DynamicPageHeader","Element","element","_header","addChild","child","elem","path","$","parentsUntil","localName","addContent","removeChild","removeContent","defaultPress","attached","attributeManager","sap","f","DynamicPageHeader","pinnable","parents","length","au","controller","viewModel","addAttributes","detached","pinnableChanged","newValue","setPinnable"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,oB,sBAAAA,Q;AAAUC,yB,sBAAAA,a;AAAeC,kB,sBAAAA,M;;AACzBC,kB,+BAAAA,M;;AACAC,4B,2BAAAA,gB;;AACAC,wC,qBAAAA,4B;;;4CAIIC,oB,WAFZL,cAAc,yBAAd,C,UACAE,OAAOI,OAAP,C,UAGIP,U;AACD,8CAAYQ,OAAZ,EAAqB;AAAA;;AAAA,yBAFrBC,OAEqB,GAFX,IAEW;;AAAA;;AACjB,yBAAKD,OAAL,GAAeA,OAAf;AACH;;+CACDE,Q,qBAASC,K,EAAOC,I,EAAM;AAClB,wBAAIC,OAAOC,EAAEF,IAAF,EAAQG,YAAR,CAAqB,KAAKP,OAA1B,CAAX;AACA,yCAAaK,IAAb,kHAAmB;AAAA;AAAA;AAAdD,gCAAc;AAAA;AAAA;AAAA;AAAdA,gCAAc;AAAA;;AACf,4BAAIA,KAAKI,SAAL,IAAkB,SAAtB,EAAiC;AAC7B,iCAAKP,OAAL,CAAaQ,UAAb,CAAwBN,KAAxB;AACH;AACJ;AACJ,iB;;+CACDO,W,wBAAYP,K,EAAOC,I,EAAM;AACrB,wBAAIC,OAAOC,EAAEF,IAAF,EAAQG,YAAR,CAAqB,KAAKP,OAA1B,CAAX;AACA,0CAAaK,IAAb,yHAAmB;AAAA;AAAA;AAAdD,gCAAc;AAAA;AAAA;AAAA;AAAdA,gCAAc;AAAA;;AACf,4BAAIA,KAAKI,SAAL,IAAkB,SAAtB,EAAiC;AAC7B,iCAAKP,OAAL,CAAaU,aAAb,CAA2BR,KAA3B;AACH;AACJ;AACJ,iB;;+CACDS,Y,2BAAe,CAEd,C;;+CACDC,Q,uBAAW;AACP,wBAAIC,mBAAmB,IAAIlB,gBAAJ,CAAqB,KAAKI,OAA1B,CAAvB;;AAEA,yBAAKC,OAAL,GAAe,IAAIc,IAAIC,CAAJ,CAAMC,iBAAV,CACX;AACIC,kCAAUrB,6BAA6B,KAAKqB,QAAlC;AADd,qBADW,CAAf;AAKA,wBAAIZ,EAAE,KAAKN,OAAP,EAAgBmB,OAAhB,CAAwB,iBAAxB,EAA2CC,MAA3C,GAAoD,CAAxD,EAA2D;AACvDd,0BAAE,KAAKN,OAAP,EAAgBmB,OAAhB,CAAwB,iBAAxB,EAA2C,CAA3C,EAA8CE,EAA9C,CAAiDC,UAAjD,CAA4DC,SAA5D,CAAsErB,QAAtE,CAA+E,KAAKD,OAApF,EAA6F,KAAKD,OAAlG;AACAc,yCAAiBU,aAAjB,CAA+B,EAAE,iBAAiB,EAAnB,EAA/B;AACH;AACJ,iB;;+CACDC,Q,uBAAW;AACPnB,sBAAE,KAAKN,OAAP,EAAgBmB,OAAhB,CAAwB,iBAAxB,EAA2C,CAA3C,EAA8CE,EAA9C,CAAiDC,UAAjD,CAA4DC,SAA5D,CAAsEb,WAAtE,CAAkF,KAAKT,OAAvF,EAAgG,KAAKD,OAArG;AACH,iB;;+CACD0B,e,4BAAgBC,Q,EAAU;AACtB,wBAAI,KAAK1B,OAAL,KAAiB,IAArB,EAA2B;AACvB,6BAAKA,OAAL,CAAa2B,WAAb,CAAyB/B,6BAA6B8B,QAA7B,CAAzB;AACH;AACJ,iB;;;;;;2BA3CsB,I","file":"../../../dynamic-page-header/dynamic-page-header.js","sourcesContent":["import { bindable, customElement, noView } from 'aurelia-templating';\r\nimport { inject } from 'aurelia-dependency-injection';\r\nimport { AttributeManager } from '../common/attributeManager';\r\nimport { getBooleanFromAttributeValue } from '../common/attributes';\r\n\r\n@customElement('ui5-dynamic-page-header')\r\n@inject(Element)\r\nexport class Ui5DynamicPageHeader {\r\n    _header = null;\r\n    @bindable() pinnable = true;\r\n    constructor(element) {\r\n        this.element = element;\r\n    }\r\n    addChild(child, elem) {\r\n        var path = $(elem).parentsUntil(this.element);\r\n        for (elem of path) {\r\n            if (elem.localName == 'content') {\r\n                this._header.addContent(child);\r\n            }\r\n        }\r\n    }\r\n    removeChild(child, elem) {\r\n        var path = $(elem).parentsUntil(this.element);\r\n        for (elem of path) {\r\n            if (elem.localName == 'content') {\r\n                this._header.removeContent(child);\r\n            }\r\n        }\r\n    }\r\n    defaultPress() {\r\n\r\n    }\r\n    attached() {\r\n        var attributeManager = new AttributeManager(this.element);\r\n\r\n        this._header = new sap.f.DynamicPageHeader(\r\n            {\r\n                pinnable: getBooleanFromAttributeValue(this.pinnable),\r\n            }\r\n        );\r\n        if ($(this.element).parents(\"[ui5-container]\").length > 0) {\r\n            $(this.element).parents(\"[ui5-container]\")[0].au.controller.viewModel.addChild(this._header, this.element);\r\n            attributeManager.addAttributes({ \"ui5-container\": '' });\r\n        }\r\n    }\r\n    detached() {\r\n        $(this.element).parents(\"[ui5-container]\")[0].au.controller.viewModel.removeChild(this._header, this.element);\r\n    }\r\n    pinnableChanged(newValue) {\r\n        if (this._header !== null) {\r\n            this._header.setPinnable(getBooleanFromAttributeValue(newValue));\r\n        }\r\n    }\r\n\r\n}\r\n"]}