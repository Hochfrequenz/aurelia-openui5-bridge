{"version":3,"sources":["common/polyfills.js"],"names":["polyfillElementClosest","Element","prototype","matches","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","selector","element","elements","document","ownerDocument","querySelectorAll","index","Boolean","closest","nodeType","parentNode"],"mappings":";;;;;AACO,WAASA,sBAAT,GAAkC;AACvC,QAAI,OAAOC,QAAQC,SAAR,CAAkBC,OAAzB,KAAqC,UAAzC,EAAqD;AACnDF,cAAQC,SAAR,CAAkBC,OAAlB,GAA4BF,QAAQC,SAAR,CAAkBE,iBAAlB,IAAuCH,QAAQC,SAAR,CAAkBG,kBAAzD,IAA+EJ,QAAQC,SAAR,CAAkBI,qBAAjG,IAA0H,SAASH,OAAT,CAAiBI,QAAjB,EAA2B;AAC/K,YAAIC,UAAU,IAAd;AACA,YAAIC,WAAW,CAACD,QAAQE,QAAR,IAAoBF,QAAQG,aAA7B,EAA4CC,gBAA5C,CAA6DL,QAA7D,CAAf;AACA,YAAIM,QAAQ,CAAZ;;AAEA,eAAOJ,SAASI,KAAT,KAAmBJ,SAASI,KAAT,MAAoBL,OAA9C,EAAuD;AACrD,YAAEK,KAAF;AACD;AACD,eAAOC,QAAQL,SAASI,KAAT,CAAR,CAAP;AACD,OATD;AAUD;;AAED,QAAI,OAAOZ,QAAQC,SAAR,CAAkBa,OAAzB,KAAqC,UAAzC,EAAqD;AACnDd,cAAQC,SAAR,CAAkBa,OAAlB,GAA4B,SAASA,OAAT,CAAiBR,QAAjB,EAA2B;AACrD,YAAIC,UAAU,IAAd;;AAEA,eAAOA,WAAWA,QAAQQ,QAAR,KAAqB,CAAvC,EAA0C;AACxC,cAAIR,QAAQL,OAAR,CAAgBI,QAAhB,CAAJ,EAA+B;AAC7B,mBAAOC,OAAP;AACD;;AAEDA,oBAAUA,QAAQS,UAAlB;AACD;AACD,eAAO,IAAP;AACD,OAXD;AAYD;AACF;;oCA5BejB,sB","file":"../../../common/polyfills.js","sourcesContent":["// https://github.com/jonathantneal/closest/blob/master/closest.js\r\nexport function polyfillElementClosest() {\r\n  if (typeof Element.prototype.matches !== 'function') {\r\n    Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.webkitMatchesSelector || function matches(selector) {\r\n      let element = this;\r\n      let elements = (element.document || element.ownerDocument).querySelectorAll(selector);\r\n      let index = 0;\r\n\r\n      while (elements[index] && elements[index] !== element) {\r\n        ++index;\r\n      }\r\n      return Boolean(elements[index]);\r\n    };\r\n  }\r\n\r\n  if (typeof Element.prototype.closest !== 'function') {\r\n    Element.prototype.closest = function closest(selector) {\r\n      let element = this;\r\n\r\n      while (element && element.nodeType === 1) {\r\n        if (element.matches(selector)) {\r\n          return element;\r\n        }\r\n\r\n        element = element.parentNode;\r\n      }\r\n      return null;\r\n    };\r\n  }\r\n}\r\n"]}