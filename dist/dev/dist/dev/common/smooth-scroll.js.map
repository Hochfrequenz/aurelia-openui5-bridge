{"version":3,"sources":["common/smooth-scroll.js"],"names":["Animator","Router","SmoothScroll","animator","router","config","defaultConfig","duration","easing","scrollTo","elementOrHash","options","container","document","body","target","hash","indexOf","slice","length","querySelector","Promise","resolve","animate","Object","assign","offset","getOffset","offsetTop","inject"],"mappings":";;;;;;;;;;;;;;;AAASA,oB,qBAAAA,Q;;AACAC,kB,kBAAAA,M;;;oCAGIC,Y;AAQT,sCAAYC,QAAZ,EAAsBC,MAAtB,EAA8B;AAAA;;AAC1B,yBAAKD,QAAL,GAAgBA,QAAhB;AACA,yBAAKC,MAAL,GAAcA,MAAd;AACA,wBAAIC,SAASH,aAAaI,aAA1B;AACA,wBAAID,OAAOE,QAAX,EAAqB,KAAKA,QAAL,GAAgBF,OAAOE,QAAvB;AACrB,wBAAIF,OAAOG,MAAX,EAAmB,KAAKA,MAAL,GAAcH,OAAOG,MAArB;AACtB;;uCAcDC,Q,qBAASC,a,EAAwD;AAAA,wBAAzCC,OAAyC,uEAA/B,EAA+B;AAAA,wBAA3BC,SAA2B,uEAAfC,SAASC,IAAM;;;AAE7D,wBAAIC,SAASL,aAAb;AACA,wBAAIM,OAAO,IAAX;;AAEA,wBAAI,OAAON,aAAP,KAAyB,QAAzB,IAAqCA,cAAcO,OAAd,CAAsB,GAAtB,MAA+B,CAAxE,EAA2E;AACvED,+BAAON,cAAcQ,KAAd,CAAoB,CAApB,EAAuBR,cAAcS,MAArC,CAAP;AACA,4BAAIH,IAAJ,EAAU;AAEND,qCAASH,UAAUQ,aAAV,oBAAyCJ,IAAzC,QAAT;AACH,yBAHD,MAGO;AACHD,qCAASF,SAASC,IAAlB;AACH;AAWJ;;AAED,wBAAI,CAACC,MAAD,IAAW,OAAOA,MAAP,KAAkB,QAAjC,EAA2C,OAAOM,QAAQC,OAAR,EAAP;AAC3C,2BAAO,KAAKnB,QAAL,CAAcoB,OAAd,CAAsBR,MAAtB,EAA8B,QAA9B,EACHS,OAAOC,MAAP,CAAc;AACVlB,kCAAU,KAAKA,QADL;AAEVmB,gCAAQxB,aAAayB,SAAb,EAFE;AAGVnB,gCAAQ,KAAKA;AAHH,qBAAd,EAIGG,OAJH,CADG,CAAP;AAQH,iB;;6BAEMgB,S,wBAAY;AACf,2BAAO,CAAEd,SAASO,aAAT,CAAuB,YAAvB,EAAqCQ,SAA9C;AACH,iB;;;wBAhEMtB,a,GAAgB;AACnBC,0BAAU,GADS;AAEnBC,wBAAQ;AAFW,a,SAKhBqB,M,GAAS,CAAC7B,QAAD,EAAWC,MAAX,C","file":"../../../common/smooth-scroll.js","sourcesContent":["import { Animator } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\n\r\n\r\nexport class SmoothScroll {\r\n\r\n    static defaultConfig = {\r\n        duration: 400,\r\n        easing: \"ease-in\"\r\n    };\r\n\r\n    static inject = [Animator, Router];\r\n    constructor(animator, router) {\r\n        this.animator = animator;\r\n        this.router = router;\r\n        var config = SmoothScroll.defaultConfig;\r\n        if (config.duration) this.duration = config.duration;\r\n        if (config.easing) this.easing = config.easing;\r\n    }\r\n\r\n\r\n    //    this.scrollTo(this.element.getAttribute(\"href\"),{},document.body);\r\n\r\n    /**\r\n     * Scroll to an element or named anchor\r\n     *\r\n     * @param elementOrHash   element to scroll to or named anchor\r\n     * @param options         animator options\r\n     * @param container       the container element (defaults to document.body)\r\n     *\r\n     * @returns {Promise} resolved when scrolling is done\r\n     */\r\n    scrollTo(elementOrHash, options = {}, container = document.body) {\r\n\r\n        var target = elementOrHash;\r\n        var hash = null;\r\n        //find target by id or name\r\n        if (typeof elementOrHash === \"string\" && elementOrHash.indexOf(\"#\") === 0) {\r\n            hash = elementOrHash.slice(1, elementOrHash.length);\r\n            if (hash) {\r\n                //query main DOM element, get UIElement\r\n                target = container.querySelector(`[data-sap-ui=\"${hash}\"]`);\r\n            } else {\r\n                target = document.body;\r\n            }\r\n\r\n            /*if (history) {\r\n                history.pushState(null, null, '#/' + this.router.currentInstruction.fragment + '/' + hash);\r\n            } else {\r\n                //fallback to location.hash\r\n                var t = container.scrollTop;\r\n                location.hash = hash;\r\n                container.scrollTop = t;\r\n            }*/\r\n\r\n        }\r\n\r\n        if (!target || typeof target === \"string\") return Promise.resolve();\r\n        return this.animator.animate(target, \"scroll\",\r\n            Object.assign({\r\n                duration: this.duration,\r\n                offset: SmoothScroll.getOffset(),\r\n                easing: this.easing\r\n            }, options)\r\n        );\r\n\r\n    }\r\n\r\n    static getOffset() {\r\n        return - document.querySelector(\".sapUiBody\").offsetTop;\r\n    }\r\n\r\n}"]}