{"version":3,"sources":["common/events.js"],"names":["fireEvent","element","name","data","event","CustomEvent","detail","bubbles","dispatchEvent","fireMaterializeEvent","constants","eventPrefix"],"mappings":";;;;;;AAQO,WAASA,SAAT,CAAmBC,OAAnB,EAAqCC,IAArC,EAA+D;AAAA,QAAZC,IAAY,uEAAJ,EAAI;;AACpE,QAAIC,QAAQ,IAAIC,WAAJ,CAAgBH,IAAhB,EAAsB;AAChCI,cAAQH,IADwB;AAEhCI,eAAS;AAFuB,KAAtB,CAAZ;AAIAN,YAAQO,aAAR,CAAsBJ,KAAtB;;AAEA,WAAOA,KAAP;AACD;;uBAReJ,S;;AAgBT,WAASS,oBAAT,CAA8BR,OAA9B,EAAgDC,IAAhD,EAA0E;AAAA,QAAZC,IAAY,uEAAJ,EAAI;;AAC/E,WAAOH,UAAUC,OAAV,OAAsBS,UAAUC,WAAhC,GAA8CT,IAA9C,EAAsDC,IAAtD,CAAP;AACD;;kCAFeM,oB;;;;AAxBRC,e,cAAAA,S","file":"../../../common/events.js","sourcesContent":["import {constants} from './constants';\r\n\r\n/**\r\n* Fire DOM event on an element\r\n* @param element The Element which the DOM event will be fired on\r\n* @param name The Event's name\r\n* @param data Addition data to attach to an event\r\n*/\r\nexport function fireEvent(element: Element, name: string, data? = {}) {\r\n  let event = new CustomEvent(name, {\r\n    detail: data,\r\n    bubbles: true\r\n  });\r\n  element.dispatchEvent(event);\r\n\r\n  return event;\r\n}\r\n\r\n/**\r\n* Fire DOM event on an element with the md-on prefix\r\n* @param element The Element which the DOM event will be fired on\r\n* @param name The Event's name, without md-on prefix\r\n* @param data Addition data to attach to an event\r\n*/\r\nexport function fireMaterializeEvent(element: Element, name: string, data? = {}) {\r\n  return fireEvent(element, `${constants.eventPrefix}${name}`, data);\r\n}\r\n"]}