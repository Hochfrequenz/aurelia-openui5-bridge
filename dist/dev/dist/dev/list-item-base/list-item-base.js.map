{"version":3,"sources":["list-item-base/list-item-base.js"],"names":["bindable","customElement","noView","inject","AttributeManager","getBooleanFromAttributeValue","Ui5Control","Ui5ListItemBase","Element","defaultFunc","elem","addChild","child","removeChild","removeChildByRelation","relation","attached","fillProperties","propertyObject","visible","type","unread","selected","counter","highlight","tap","detailTap","press","detailPress","busyChanged","newValue","UIElement","setBusy","bind","param","unbind"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,c,sBAAAA,Q;AAAUC,mB,sBAAAA,a;AAAeC,Y,sBAAAA,M;;AACzBC,Y,+BAAAA,M;;AACAC,sB,2BAAAA,gB;;AACAC,kC,qBAAAA,4B;;AACAC,gB,mBAAAA,U;;;iCAGIC,e,WADZJ,OAAOK,OAAP,C,UAGER,U,UACAA,U,UACAA,U,UACAA,U,UACAA,U,UACAA,U,UAEAA,U,UACAA,U,WACAA,U,WACAA,U;;;kCAIDS,W,0BAAc,CAEb,C;;AACD,iCAAYC,IAAZ,EAAkB;AAAA;;AAAA,uDAChB,uBAAMA,IAAN,CADgB;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAEjB;;kCACDC,Q,qBAASC,K,EAAOF,I,EAAM;AACpB,gCAAMC,QAAN,YAAeC,KAAf,EAAsBF,IAAtB;AACD,S;;kCACDG,W,wBAAYD,K,EAAOF,I,EAAM;AACvB,gCAAMG,WAAN,YAAkBD,KAAlB,EAAyBF,IAAzB;AACD,S;;kCACDI,qB,kCAAsBF,K,EAAOG,Q,EAAU;AACrC,gCAAMD,qBAAN,YAA4BF,KAA5B,EAAmCG,QAAnC;AACD,S;;kCACDC,Q,uBAAW;AACT,gCAAMA,QAAN;AACD,S;;kCACDC,c,2BAAeC,c,EAAgB;AAC7B,gCAAMD,cAAN,YAAqBC,cAArB;AACAA,yBAAeC,OAAf,GAAyBd,6BAA6B,KAAKc,OAAlC,CAAzB;AACAD,yBAAeE,IAAf,GAAsB,KAAKA,IAA3B;AACAF,yBAAeG,MAAf,GAAwBhB,6BAA6B,KAAKgB,MAAlC,CAAxB;AACAH,yBAAeI,QAAf,GAA0BjB,6BAA6B,KAAKiB,QAAlC,CAA1B;AACAJ,yBAAeK,OAAf,GAAyB,KAAKA,OAA9B;AACAL,yBAAeM,SAAf,GAA2B,KAAKA,SAAhC;AACAN,yBAAeO,GAAf,GAAqB,KAAKA,GAA1B;AACAP,yBAAeQ,SAAf,GAA2B,KAAKA,SAAhC;AACAR,yBAAeS,KAAf,GAAuB,KAAKA,KAA5B;AACAT,yBAAeU,WAAf,GAA6B,KAAKA,WAAlC;AACD,S;;kCACDC,W,wBAAYC,Q,EAAU;AACpB,cAAI,KAAKC,SAAL,IAAkB,IAAtB,EAA4B;AAC1B,iBAAKA,SAAL,CAAeC,OAAf,CAAuB3B,6BAA6ByB,QAA7B,CAAvB;AACD;AACF,S;;kCACDG,I,iBAAKC,K,EAAO;AACV,gCAAMD,IAAN,YAAWC,KAAX;AACD,S;;kCACDC,M,qBAAS;AACP,gCAAMA,MAAN;AACD,S;;;QAzDkC7B,U;;;iBAEb,I;;;;;iBACH,U;;;;;iBACE,K;;;;;iBACE,K;;;;;iBACD,I;;;;;iBACE,M;;;;;iBAEN,KAAKG,W;;;;;iBACC,KAAKA,W;;;;;iBACT,KAAKA,W;;;;;iBACC,KAAKA,W","file":"../../../list-item-base/list-item-base.js","sourcesContent":["import { bindable, customElement, noView } from 'aurelia-templating';\r\nimport { inject } from 'aurelia-dependency-injection';\r\nimport { AttributeManager } from '../common/attributeManager';\r\nimport { getBooleanFromAttributeValue } from '../common/attributes';\r\nimport { Ui5Control } from '../control/control';\r\n\r\n@inject(Element)\r\nexport class Ui5ListItemBase extends Ui5Control {\r\n\r\n  @bindable() visible = true;\r\n  @bindable() type = 'Inactive';\r\n  @bindable() unread = false;\r\n  @bindable() selected = false;\r\n  @bindable() counter = null;\r\n  @bindable() highlight = 'None';\r\n\r\n  @bindable() tap = this.defaultFunc;\r\n  @bindable() detailTap = this.defaultFunc;\r\n  @bindable() press = this.defaultFunc;\r\n  @bindable() detailPress = this.defaultFunc;\r\n\r\n  /*inherited from control*/\r\n\r\n  defaultFunc() {\r\n\r\n  }\r\n  constructor(elem) {\r\n    super(elem);\r\n  }\r\n  addChild(child, elem) {\r\n    super.addChild(child, elem);\r\n  }\r\n  removeChild(child, elem) {\r\n    super.removeChild(child, elem);\r\n  }\r\n  removeChildByRelation(child, relation) {\r\n    super.removeChildByRelation(child, relation);\r\n  }\r\n  attached() {\r\n    super.attached();\r\n  }\r\n  fillProperties(propertyObject) {\r\n    super.fillProperties(propertyObject);\r\n    propertyObject.visible = getBooleanFromAttributeValue(this.visible);\r\n    propertyObject.type = this.type;\r\n    propertyObject.unread = getBooleanFromAttributeValue(this.unread);\r\n    propertyObject.selected = getBooleanFromAttributeValue(this.selected);\r\n    propertyObject.counter = this.counter;\r\n    propertyObject.highlight = this.highlight;\r\n    propertyObject.tap = this.tap;\r\n    propertyObject.detailTap = this.detailTap;\r\n    propertyObject.press = this.press;\r\n    propertyObject.detailPress = this.detailPress;\r\n  }\r\n  busyChanged(newValue) {\r\n    if (this.UIElement != null) {\r\n      this.UIElement.setBusy(getBooleanFromAttributeValue(newValue));\r\n    }\r\n  }\r\n  bind(param) {\r\n    super.bind(param);\r\n  }\r\n  unbind() {\r\n    super.unbind();\r\n  }\r\n\r\n}\r\n"]}