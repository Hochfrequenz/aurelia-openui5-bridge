{"version":3,"sources":["container/container.js"],"names":["bindable","customAttribute","inject","AttributeManager","getBooleanFromAttributeValue","Ui5Container","Element","element","attributeManager","attached","detached"],"mappings":";;;;;;;;;;;;;;;AAASA,c,sBAAAA,Q;AAAUC,qB,sBAAAA,e;;AACVC,Y,+BAAAA,M;;AACAC,sB,2BAAAA,gB;;AACAC,kC,qBAAAA,4B;;;8BAIIC,Y,WAFZJ,gBAAgB,eAAhB,C,UACAC,OAAOI,OAAP,C;AAGC,8BAAYC,OAAZ,EAAqB;AAAA;;AACnB,eAAKA,OAAL,GAAeA,OAAf;AACA,eAAKC,gBAAL,GAAwB,IAAIL,gBAAJ,CAAqB,KAAKI,OAA1B,CAAxB;AACD;;+BAEDE,Q,uBAAW,CAEV,C;;+BAEDC,Q,uBAAW,CAEV,C","file":"../../../container/container.js","sourcesContent":["import { bindable, customAttribute } from 'aurelia-templating';\r\nimport { inject } from 'aurelia-dependency-injection';\r\nimport { AttributeManager } from '../common/attributeManager';\r\nimport { getBooleanFromAttributeValue } from '../common/attributes';\r\n\r\n@customAttribute('ui5-container')\r\n@inject(Element)\r\nexport class Ui5Container {\r\n \r\n  constructor(element) {\r\n    this.element = element;\r\n    this.attributeManager = new AttributeManager(this.element);\r\n  }\r\n\r\n  attached() {\r\n  \r\n  }\r\n\r\n  detached() {\r\n    \r\n  }\r\n\r\n}\r\n"]}