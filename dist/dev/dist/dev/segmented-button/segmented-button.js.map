{"version":3,"sources":["segmented-button/segmented-button.js"],"names":["bindable","customElement","noView","inject","AttributeManager","getBooleanFromAttributeValue","Ui5SegmentedButton","Element","defaultFunc","element","_button","attributeManager","addChild","child","elem","path","$","parentsUntil","localName","getItems","length","selectedKey","mProperties","key","addItem","attached","sap","m","SegmentedButton","enabled","width","select","parents","au","controller","viewModel","attachChange","event","that","mParameters","selectedItem","detached","enableChanged","newValue","setEnabled","widthChanged","setEidth","selectedKeyChanged","setSelectedKey"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,c,sBAAAA,Q;AAAUC,mB,sBAAAA,a;AAAeC,Y,sBAAAA,M;;AACzBC,Y,+BAAAA,M;;AACAC,sB,2BAAAA,gB;;AACAC,kC,qBAAAA,4B;;;;;;;;;;;;;;;;;;;;;oCAIIC,kB,WAFZL,cAAc,sBAAd,C,UACAE,OAAOI,OAAP,C,UAEEP,U,UACAA,U,UACAA,U,UACAA,U;qCAEDQ,W,0BAAc,CAEb,C;;AACD,oCAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAJrBC,OAIqB,GAJX,IAIW;;AACnB,eAAKC,gBAAL,GAAwB,IAAIP,gBAAJ,CAAqBK,OAArB,CAAxB;AACA,eAAKA,OAAL,GAAeA,OAAf;AACD;;qCAIDG,Q,qBAASC,K,EAAOC,I,EAAM;AACpB,cAAIC,OAAOC,EAAEF,IAAF,EAAQG,YAAR,CAAqB,KAAKR,OAA1B,CAAX;AACA,+BAAaM,IAAb,kHAAmB;AAAA;AAAA;AAAdD,kBAAc;AAAA;AAAA;AAAA;AAAdA,kBAAc;AAAA;;AACjB,gBAAIA,KAAKI,SAAL,IAAkB,MAAtB,EACE,IAAI,KAAKR,OAAL,CAAaS,QAAb,GAAwBC,MAAxB,IAAkC,CAAtC,EACE,KAAKC,WAAL,GAAmBR,MAAMS,WAAN,CAAkBC,GAArC;AACJ,iBAAKb,OAAL,CAAac,OAAb,CAAqBX,KAArB;;AAEA;AACD;AACF,S;;qCAEDY,Q,uBAAW;AACT,eAAKf,OAAL,GAAe,IAAIgB,IAAIC,CAAJ,CAAMC,eAAV,CAA0B;AACvCC,qBAAS,CAACxB,6BAA6B,KAAKwB,OAAlC,CAD6B;AAEvCC,mBAAO,KAAKA,KAF2B;AAGvCT,yBAAa,KAAKA,WAHqB;AAIvCU,oBAAQ,KAAKA;AAJ0B,WAA1B,CAAf;;AAOA,cAAIf,EAAE,KAAKP,OAAP,EAAgBuB,OAAhB,CAAwB,iBAAxB,EAA2CZ,MAA3C,GAAoD,CAAxD,EAA2D;AACzDJ,cAAE,KAAKP,OAAP,EAAgBuB,OAAhB,CAAwB,iBAAxB,EAA2C,CAA3C,EAA8CC,EAA9C,CAAiDC,UAAjD,CAA4DC,SAA5D,CAAsEvB,QAAtE,CAA+E,KAAKF,OAApF,EAA6F,KAAKD,OAAlG;AACD;AACC,eAAKC,OAAL,CAAa0B,YAAb,CAA0B,UAACC,KAAD,EAAW;AACrCC,iBAAKjB,WAAL,GAAmBgB,MAAME,WAAN,CAAkBC,YAAlB,CAA+BlB,WAA/B,CAA2CC,GAA9D;AACD,WAFC;AAIH,S;;qCACDkB,Q,uBAAW,CAEV,C;;qCACDC,a,0BAAcC,Q,EAAU;AACtB,cAAI,KAAKjC,OAAL,KAAiB,IAArB,EAA2B;AACzB,iBAAKA,OAAL,CAAakC,UAAb,CAAwB,CAACvC,6BAA6BsC,QAA7B,CAAzB;AACD;AACF,S;;qCACDE,Y,yBAAaF,Q,EAAU;AACrB,cAAI,KAAKjC,OAAL,KAAiB,IAArB,EAA2B;AACzB,iBAAKA,OAAL,CAAaoC,QAAb,CAAsBH,QAAtB;AACD;AACF,S;;qCACDI,kB,+BAAmBJ,Q,EAAU;AAC3B,cAAI,KAAKjC,OAAL,KAAiB,IAArB,EAA2B;AACzB,iBAAKA,OAAL,CAAasC,cAAb,CAA4BL,QAA5B;AACD;AACF,S;;;;8BAhDe;AACd,mBAAO,KAAKjC,OAAZ;AACD;;;;;;;iBAdqB,K;;;;;iBACF,I;;;;;iBACM,I;;;;;iBACL,KAAKF,W","file":"../../../segmented-button/segmented-button.js","sourcesContent":["import { bindable, customElement, noView } from 'aurelia-templating';\nimport { inject } from 'aurelia-dependency-injection';\nimport { AttributeManager } from '../common/attributeManager';\nimport { getBooleanFromAttributeValue } from '../common/attributes';\n\n@customElement('ui5-segmented-button')\n@inject(Element)\nexport class Ui5SegmentedButton {\n  @bindable() enabled = false;\n  @bindable() width = null;\n  @bindable() selectedKey = null;\n  @bindable() select = this.defaultFunc;\n  _button = null;\n  defaultFunc() {\n\n  }\n  constructor(element) {\n    this.attributeManager = new AttributeManager(element);\n    this.element = element;\n  }\n  get UIElement() {\n    return this._button;\n  }\n  addChild(child, elem) {\n    var path = $(elem).parentsUntil(this.element);\n    for (elem of path) {\n      if (elem.localName == 'item')\n        if (this._button.getItems().length == 0) // set key when first item is added\n          this.selectedKey = child.mProperties.key;\n      this._button.addItem(child);\n\n      break;\n    }\n  }\n  \n  attached() {\n    this._button = new sap.m.SegmentedButton({\n      enabled: !getBooleanFromAttributeValue(this.enabled),\n      width: this.width,\n      selectedKey: this.selectedKey,\n      select: this.select\n    });\n\n    if ($(this.element).parents(\"[ui5-container]\").length > 0) {\n      $(this.element).parents(\"[ui5-container]\")[0].au.controller.viewModel.addChild(this._button, this.element);\n    }\n      this._button.attachChange((event) => {\n      that.selectedKey = event.mParameters.selectedItem.mProperties.key;\n    });\n\n  }\n  detached() {\n\n  }\n  enableChanged(newValue) {\n    if (this._button !== null) {\n      this._button.setEnabled(!getBooleanFromAttributeValue(newValue));\n    }\n  }\n  widthChanged(newValue) {\n    if (this._button !== null) {\n      this._button.setEidth(newValue);\n    }\n  }\n  selectedKeyChanged(newValue) {\n    if (this._button !== null) {\n      this._button.setSelectedKey(newValue);\n    }\n  }\n\n}\n"]}