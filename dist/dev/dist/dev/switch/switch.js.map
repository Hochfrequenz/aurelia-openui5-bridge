{"version":3,"sources":["switch/switch.js"],"names":["bindable","customElement","bindingMode","inject","getBooleanFromAttributeValue","fireEvent","MdSwitch","Element","defaultBindingMode","twoWay","element","handleChange","bind","attached","checkbox","checked","mdChecked","mdDisabled","disabled","addEventListener","detached","removeEventListener","blur","mdCheckedChanged","newValue","mdDisabledChanged"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,c,sBAAAA,Q;AAAUC,mB,sBAAAA,a;;AACVC,iB,mBAAAA,W;;AACAC,Y,+BAAAA,M;;AACAC,kC,qBAAAA,4B;;AACDC,e,iBAAAA,S;;;0BAIKC,Q,WAFZL,cAAc,WAAd,C,UACAE,OAAOI,OAAP,C,UAEEP,SAAS;AACRQ,4BAAoBN,YAAYO;AADxB,OAAT,C,UAGAT,U,UACAA,U,UACAA,U;AAED,0BAAYU,OAAZ,EAAqB;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACnB,eAAKA,OAAL,GAAeA,OAAf;AACA,eAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;2BAEDC,Q,uBAAW;AACT,eAAKC,QAAL,CAAcC,OAAd,GAAwBX,6BAA6B,KAAKY,SAAlC,CAAxB;AACA,cAAIZ,6BAA6B,KAAKa,UAAlC,CAAJ,EAAmD;AACjD,iBAAKH,QAAL,CAAcI,QAAd,GAAyB,IAAzB;AACD;AACD,eAAKJ,QAAL,CAAcK,gBAAd,CAA+B,QAA/B,EAAyC,KAAKR,YAA9C;AACD,S;;2BAEDS,Q,uBAAW;AACT,eAAKN,QAAL,CAAcO,mBAAd,CAAkC,QAAlC,EAA4C,KAAKV,YAAjD;AACD,S;;2BAEDA,Y,2BAAe;AACb,eAAKK,SAAL,GAAiB,KAAKF,QAAL,CAAcC,OAA/B;AACAV,oBAAU,KAAKK,OAAf,EAAwB,MAAxB;AACD,S;;2BAEDY,I,mBAAO;AACLjB,oBAAU,KAAKK,OAAf,EAAwB,MAAxB;AACD,S;;2BAEDa,gB,6BAAiBC,Q,EAAU;AACzB,cAAI,KAAKV,QAAT,EAAmB;AACjB,iBAAKA,QAAL,CAAcC,OAAd,GAAwB,CAAC,CAACS,QAA1B;AACD;AACF,S;;2BAEDC,iB,8BAAkBD,Q,EAAU;AAC1B,cAAI,KAAKV,QAAT,EAAmB;AACjB,iBAAKA,QAAL,CAAcI,QAAd,GAAyB,CAAC,CAACM,QAA3B;AACD;AACF,S;;;;;;;;;;;;iBAvCwB,K;;;;;iBACD,I","file":"../../../switch/switch.js","sourcesContent":["import { bindable, customElement } from 'aurelia-templating';\r\nimport { bindingMode } from 'aurelia-binding';\r\nimport { inject } from 'aurelia-dependency-injection';\r\nimport { getBooleanFromAttributeValue } from '../common/attributes';\r\nimport {fireEvent} from '../common/events';\r\n\r\n@customElement('md-switch')\r\n@inject(Element)\r\nexport class MdSwitch {\r\n  @bindable({\r\n    defaultBindingMode: bindingMode.twoWay\r\n  }) mdChecked;\r\n  @bindable() mdDisabled;\r\n  @bindable() mdLabelOff = 'Off';\r\n  @bindable() mdLabelOn = 'On';\r\n\r\n  constructor(element) {\r\n    this.element = element;\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  attached() {\r\n    this.checkbox.checked = getBooleanFromAttributeValue(this.mdChecked);\r\n    if (getBooleanFromAttributeValue(this.mdDisabled)) {\r\n      this.checkbox.disabled = true;\r\n    }\r\n    this.checkbox.addEventListener('change', this.handleChange);\r\n  }\r\n\r\n  detached() {\r\n    this.checkbox.removeEventListener('change', this.handleChange);\r\n  }\r\n\r\n  handleChange() {\r\n    this.mdChecked = this.checkbox.checked;\r\n    fireEvent(this.element, 'blur');\r\n  }\r\n\r\n  blur() {\r\n    fireEvent(this.element, 'blur');\r\n  }\r\n\r\n  mdCheckedChanged(newValue) {\r\n    if (this.checkbox) {\r\n      this.checkbox.checked = !!newValue;\r\n    }\r\n  }\r\n\r\n  mdDisabledChanged(newValue) {\r\n    if (this.checkbox) {\r\n      this.checkbox.disabled = !!newValue;\r\n    }\r\n  }\r\n}\r\n"]}