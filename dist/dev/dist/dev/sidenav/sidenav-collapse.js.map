{"version":3,"sources":["sidenav/sidenav-collapse.js"],"names":["bindable","customAttribute","ObserverLocator","inject","getBooleanFromAttributeValue","getLogger","MdSidenavCollapse","Element","element","observerLocator","log","attached","ref","whenAttached","then","closeOnClick","mdFixed","window","innerWidth","mdCloseOnClick","setAttribute","controlId","sideNavConfig","edge","mdEdge","menuWidth","parseInt","mdWidth","$","sideNav","detached","show","hide"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,c,sBAAAA,Q;AAAUC,qB,sBAAAA,e;;AACVC,qB,mBAAAA,e;;AACAC,Y,+BAAAA,M;;AACAC,kC,qBAAAA,4B;;AACAC,e,mBAAAA,S;;;mCAIIC,iB,WAFZL,gBAAgB,qBAAhB,C,UACAE,OAAOI,OAAP,EAAgBL,eAAhB,C,UAEEF,U;AACD,mCAAYQ,OAAZ,EAAqBC,eAArB,EAAsC;AAAA;;AAAA;;AACpC,eAAKD,OAAL,GAAeA,OAAf;AACA,eAAKC,eAAL,GAAuBA,eAAvB;AACA,eAAKC,GAAL,GAAWL,UAAU,qBAAV,CAAX;AACD;;oCAEDM,Q,uBAAW;AAAA;;AACT,eAAKC,GAAL,CAASC,YAAT,CAAsBC,IAAtB,CAA2B,YAAM;;AAI/B,gBAAMC,eAAe,MAAKH,GAAL,CAASI,OAAT,IAAoBC,OAAOC,UAAP,GAAoB,GAAxC,GAA8C,KAA9C,GAAsDd,6BAA6B,MAAKQ,GAAL,CAASO,cAAtC,CAA3E;;AAEA,kBAAKX,OAAL,CAAaY,YAAb,CAA0B,gBAA1B,EAA4C,MAAKR,GAAL,CAASS,SAArD;AACA,gBAAIC,gBAAgB;AAClBC,oBAAM,MAAKX,GAAL,CAASY,MAAT,IAAmB,MADP;;AAGlBT,wCAHkB;AAIlBU,yBAAWC,SAAS,MAAKd,GAAL,CAASe,OAAlB,EAA2B,EAA3B;AAJO,aAApB;;AAOAC,cAAE,MAAKpB,OAAP,EAAgBqB,OAAhB,CAAwBP,aAAxB;AACD,WAfD;AAgBD,S;;oCAEDQ,Q,uBAAW,CAEV,C;;oCAEDC,I,mBAAO;AACLH,YAAE,KAAKpB,OAAP,EAAgBqB,OAAhB,CAAwB,MAAxB;AACD,S;;oCAEDG,I,mBAAO;AACLJ,YAAE,KAAKpB,OAAP,EAAgBqB,OAAhB,CAAwB,MAAxB;AACD,S","file":"../../../sidenav/sidenav-collapse.js","sourcesContent":["import { bindable, customAttribute } from 'aurelia-templating';\nimport { ObserverLocator } from 'aurelia-binding';\nimport { inject } from 'aurelia-dependency-injection';\nimport { getBooleanFromAttributeValue } from '../common/attributes';\nimport { getLogger } from 'aurelia-logging';\n\n@customAttribute('md-sidenav-collapse')\n@inject(Element, ObserverLocator)\nexport class MdSidenavCollapse {\n  @bindable() ref;\n  constructor(element, observerLocator) {\n    this.element = element;\n    this.observerLocator = observerLocator;\n    this.log = getLogger('md-sidenav-collapse');\n  }\n\n  attached() {\n    this.ref.whenAttached.then(() => {\n      // this.widthSubscription = this.observerLocator.getObserver(this.ref, 'mdWidth').subscribe(this.widthChanged.bind(this));\n      // this.fixedSubscription = this.observerLocator.getObserver(this.ref, 'fixed').subscribe(this.fixedChanged.bind(this));\n\n      const closeOnClick = this.ref.mdFixed && window.innerWidth > 992 ? false : getBooleanFromAttributeValue(this.ref.mdCloseOnClick);\n\n      this.element.setAttribute('data-activates', this.ref.controlId);\n      let sideNavConfig = {\n        edge: this.ref.mdEdge || 'left',\n        // closeOnClick: (this.ref.mdFixed ? false : getBooleanFromAttributeValue(this.ref.mdCloseOnClick)),\n        closeOnClick,\n        menuWidth: parseInt(this.ref.mdWidth, 10)\n      };\n      // this.log.debug('sideNavConfig:', sideNavConfig);\n      $(this.element).sideNav(sideNavConfig);\n    });\n  }\n\n  detached() {\n    // this.widthSubscription.unsubscribe();\n  }\n\n  show() {\n    $(this.element).sideNav('show');\n  }\n\n  hide() {\n    $(this.element).sideNav('hide');\n  }\n\n  // fixedChanged() {\n  //   this.log.debug('fixedChanged');\n  //   $(this.element).sideNav({\n  //     edge: this.ref.edge || 'left',\n  //     closeOnClick: this.ref.closeOnClick,\n  //     menuWidth: parseInt(this.ref.mdWidth, 10)\n  //   });\n  // }\n  //\n  // widthChanged() {\n  //   this.log.debug('widthChanged');\n  //   $(this.element).sideNav({\n  //     edge: this.ref.edge || 'left',\n  //     closeOnClick: this.ref.closeOnClick,\n  //     menuWidth: parseInt(this.ref.mdWidth, 10)\n  //   });\n  // }\n}\n"]}